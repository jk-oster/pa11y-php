import{_ as r,e as a,f as s,o as n}from"./app-Df6cFUu3.js";const i={};function t(o,e){return n(),a("div",null,e[0]||(e[0]=[s('<div class="hint-container warning"><p class="hint-container-title">Warning</p><p>üèóÔ∏è This Page Under Construction and not ready for use yet!</p></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><h3 id="generating-your-first-report" tabindex="-1"><a class="header-anchor" href="#generating-your-first-report"><span>Generating your first report</span></a></h3><p>With the package installed, this is how you can run <strong>pa11y</strong>:</p><div class="language-php line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// TODO</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can use the count methods to get the number of accessibility errors / warning / notices on your page.</p><div class="language-php line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// TODO</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To get an array of all errors call <code>errors()</code>:</p><div class="language-php line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// TODO</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="configuring-a-run" tabindex="-1"><a class="header-anchor" href="#configuring-a-run"><span>Configuring a run</span></a></h3><p>There are various methods to configure how Pa11y should run.</p><h4 id="only-report-errors-without-warnings-or-notices" tabindex="-1"><a class="header-anchor" href="#only-report-errors-without-warnings-or-notices"><span>Only report errors without warnings or notices</span></a></h4><h4 id="configure-different-accessibility-validator" tabindex="-1"><a class="header-anchor" href="#configure-different-accessibility-validator"><span>Configure different accessibility validator</span></a></h4><h3 id="generate-report-from-sitemap" tabindex="-1"><a class="header-anchor" href="#generate-report-from-sitemap"><span>Generate report from sitemap</span></a></h3><h3 id="working-with-results" tabindex="-1"><a class="header-anchor" href="#working-with-results"><span>Working with results</span></a></h3>',15)]))}const c=r(i,[["render",t],["__file","usage.html.vue"]]),d=JSON.parse('{"path":"/usage.html","title":"Usage","lang":"en-US","frontmatter":{"title":"Usage","description":"Generate and configure accessibilty reports.","editLink":true,"prev":{"text":"Installtion & Setup","link":"/#installation-setup"}},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Generating your first report","slug":"generating-your-first-report","link":"#generating-your-first-report","children":[]},{"level":3,"title":"Configuring a run","slug":"configuring-a-run","link":"#configuring-a-run","children":[]},{"level":3,"title":"Generate report from sitemap","slug":"generate-report-from-sitemap","link":"#generate-report-from-sitemap","children":[]},{"level":3,"title":"Working with results","slug":"working-with-results","link":"#working-with-results","children":[]}]}],"git":{"updatedTime":1729619141000,"contributors":[{"name":"Jakob Osterberger","username":"Jakob Osterberger","email":"jo@studiomitte.com","commits":2,"url":"https://github.com/Jakob Osterberger"}],"changelog":[{"hash":"409269f00840e0c995bacd571466966c126f93b2","date":1729619141000,"email":"98315600+jk-oster@users.noreply.github.com","author":"Jakob Osterberger","message":"update docs","commitUrl":"jk-oster/pa11y-php/commit/409269f00840e0c995bacd571466966c126f93b2"},{"hash":"d6b75e8c3440a0d506fddc0a88901b731d094c5c","date":1729548690000,"email":"jo@studiomitte.com","author":"Jakob Osterberger","message":"add vuepress docs","commitUrl":"jk-oster/pa11y-php/commit/d6b75e8c3440a0d506fddc0a88901b731d094c5c"}]},"filePathRelative":"usage.md"}');export{c as comp,d as data};
